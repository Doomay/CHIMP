version: "3.9"

services:
    # Saves the artifacts (files) for mlflow
    minio-s3:
        restart: unless-stopped
        image: minio/minio:RELEASE.2022-10-29T06-21-33Z
        container_name: mlflow-minio-s3
        ports:
            - "9000:9000"
            - "9001:9001"
        networks:
            - backend
            - frontend
        environment:
            - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
            - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
        command: server /data --console-address ":9001"
        volumes:
            - minio_volume:/data

    # Saves tabular information for mlflow
    mysql-db:
        restart: unless-stopped
        image: mysql/mysql-server:8.0.31
        container_name: mlflow_db
        expose:
            - "3306"
        networks:
            - backend
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        volumes:
            - db_data:/var/lib/mysql
        
    # Makes the mlflow tracking and web ui available
    mlflow:
        restart: unless-stopped
        build: ./mlflow
        image: mlflow_tracking_server
        container_name: tracker_mlflow
        ports:
            - "5000:5000"
        networks:
            - frontend
            - backend
        environment:
            - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
            - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
            - MLFLOW_S3_ENDPOINT_URL=http://minio-s3:9000
        command: mlflow server --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql-db:3306/${MYSQL_DATABASE} --default-artifact-root s3://${AWS_BUCKET_NAME}/ --artifacts-destination s3://${AWS_BUCKET_NAME}/ --host 0.0.0.0
        depends_on:
            - mysql-db
            - minio-s3
        
    # Creates the s3 bucket for minio
    minio-client:
        restart: "no"
        image: minio/mc:RELEASE.2022-10-29T10-09-23Z
        networks:
          - backend
        entrypoint: >
          /bin/sh -c "
          until (/usr/bin/mc alias set minio http://minio-s3:9000 '${AWS_ACCESS_KEY_ID}' '${AWS_SECRET_ACCESS_KEY}') do echo '...waiting...' && sleep 1; done;
          /usr/bin/mc mb minio/${AWS_BUCKET_NAME};
          exit 0;
          "
        depends_on:
          - minio-s3
          
networks:
    backend:
    frontend:
        
volumes:
    db_data:
    minio_volume:
